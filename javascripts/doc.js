// Generated by CoffeeScript 1.6.3
'use strict';
var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

require.config({
  shim: {
    'zepto': {
      exports: '$'
    },
    'orange': {
      deps: ['zepto']
    }
  },
  paths: {
    'zepto': 'http://cdn.staticfile.org/zepto/1.1.3/zepto.min',
    'orange': 'https://rawgithub.com/baidao/orange/master/dist/js/orange'
  }
});

require(['zepto', 'orange'], function($, orange) {
  if (__indexOf.call(window, 'ontouchend') < 0) {
    $(document).delegate('body', 'click', function(e) {
      return $(e.target).trigger('tap');
    });
  }
  return $(function() {
    var carouselWrapper, hideSpinner, html_encode, showSpinner, spinnerWrapper;
    html_encode = function(str) {
      var s;
      s = '';
      if (str.length === 0) {
        return '';
      }
      s = str.replace(/&/g, '&gt;');
      s = s.replace(/</g, '&lt;');
      s = s.replace(/>/g, '&gt;');
      s = s.replace(/\'/g, '&#39;');
      s = s.replace(/\'/g, '&quot;');
      s = s.replace(/\n/g, '<br>');
      return s;
    };
    $('pre.lang-html').each(function(index, item) {
      var source;
      source = $(item).html();
      $(item).parent('.source').siblings('.perform').html("<div class='iphone'>" + source + "</div>");
      return $(item).html(html_encode(source));
    });
    prettyPrint();
    carouselWrapper = $('#carouselWrapper');
    spinnerWrapper = $('#spinnerWrapper');
    showSpinner = $('#showSpinner');
    hideSpinner = $('#hideSpinner');
    carouselWrapper.carousel();
    showSpinner.on('tap', function() {
      return spinnerWrapper.spinner();
    });
    hideSpinner.on('tap', function() {
      return spinnerWrapper.spinner('hide');
    });
    $('#main_content_wrap').show();
    return $('#doc-spinner').remove();
  });
});
